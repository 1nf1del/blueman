#!/usr/bin/python

# Copyright (C) 2008 Valmantas Paliksa <walmis at balticum-tv dot lt>
# Copyright (C) 2008 Tadas Dailyda <tadas at dailyda dot com>
#
# Licensed under the GNU General Public License Version 3
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 

import sys

sys.path = ["../common/"] + sys.path

import gtk

from blueman.constants import *
from blueman.functions import *
import blueman.Bluez as Bluez


class blueman_applet:

	def __init__(self):
		icon_pixbuf = get_icon('blueman.svg')
		self.status_icon = gtk.status_icon_new_from_pixbuf(icon_pixbuf)
		
		#determine if icon should be visible (in case adapters are present)
		try:
			self.Manager = Bluez.Manager("gobject")
			self.Manager.HandleSignal(self.on_adapter_removed, "AdapterRemoved")
			self.Manager.HandleSignal(self.on_adapter_added, "AdapterAdded")
			if self.Manager.ListAdapters() == []:
				self.status_icon.set_visible(False)
		except:
			self.Manager = None
			print 'Bluez DBus API not available'
			sys.exit()
		
		gtk.main()
		
	def on_adapter_added(self, path):
		print 'Added ', path
		self.status_icon.set_visible(True)
		
	def on_adapter_removed(self, path):
		print 'Removed ', path
		if self.Manager.ListAdapters() == []:
			self.status_icon.set_visible(False)

blueman_applet()
